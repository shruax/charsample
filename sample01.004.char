// 示例：变量可赋值为不同类型的数值
// 察语言不是强类型语言，或者说是弱类型语言，意味着同一变量可以被赋值为不同类型的值

// 在使用前声明一个变量a
var a

// 在控制台窗口输出变量a的值作参考
// 内置函数plt会将变量的类型与变量的值一起输出作为参考
// 此处查看输出可以看到，声明后没有赋值的变量的值是undefined
plt(a)

// 将其赋值为整数1
a = 1

// 在控制台窗口输出变量a的值作参考，此时应为整数（int）类型的数值1
plt(a)

// 将变量a重新赋值为浮点数3.2，整数和浮点数在察语言中是两个数据类型，赋值时如果没有指明，系统会自动判断某个数字的类型
// 输出中可以看出a的值变为浮点数（float）类型的值3.2
a = 3.2

plt(a)

// 再次将变量a赋值为字符串abc（察语言中可使用双引号括起字符串）
// 输出中可以看出a的值变为字符串（string）类型的值abc
a = "abc"

plt(a)

// 下面是快速变量声明与赋值后再次赋值的例子
// 声明变量b并将其赋值为布尔值true
b := true

// 输出中可以看出a的值变为布尔（bool）类型的值true
// 同其他语言类似，布尔类型仅有两个取值，另一个值是false
plt(b)

// 再次将变量b赋值为一个数学计算值，由于其中第一个数是浮点数，所以最后计算结果是浮点数
b = 12.5 * 68

plt(b)

