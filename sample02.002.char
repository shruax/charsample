// 示例：布尔数据类型

// 声明一个变量b，并立即赋值为布尔类型的数值true
// 布尔类型只有两个取值，true 和 false
var b = true

// 内置函数 prf 等同于其他语言（例如C/C++/Golang）中的printf
prf("[%v] %v\n", typeOf(b), b)

// 快速声明一个变量c并赋值为布尔值false
c := false

prf("[%T] %v\n", c, c)

// 与很多其他语言一样，“==”操作符用于判断两个表达式是否相等，并返回一个布尔值，true表示相等，false表示不相等
// 其他“>”、“>=”、“<”、“<=”也是类似的
prf("b == c: %v\n", b == c)

// 英文叹号“!”操作符表示逻辑取反，即 !true == false
prf("!b = %v\n", !b)

prf("1 > 14: %v\n", 1 > 14)

prf("b == true: %v\n", b == true)

// “&&”、“||”操作符分别表示逻辑与、逻辑或
prf("b && c: %v\n", b && c)

prf("b || c: %v\n", b || c)